// Generated by CoffeeScript 1.3.3
(function() {
  var P, S, Site, dt, fs, next, path, rock;

  P = require('autoresolve');

  rock = require('rock');

  path = require('path');

  fs = require('fs-extra');

  next = require('nextflow');

  S = require('string');

  dt = require('date-tokens');

  Site = (function() {

    function Site(sitePath) {
      this.sitePath = sitePath;
      this._potterDir = path.join(this.sitePath, 'potter');
      this._dataDir = path.join(this._potterDir, 'data');
      this._potterDataFile = path.join(this._potterDir, 'potter.json');
      this._articlesDataFile = path.join(this._dataDir, 'articles.json');
      this._pagesDataFile = path.join(this._dataDir, 'pages.json');
      this._tagsDataFile = path.join(this._dataDir, 'tags.json');
      this._potterData = {};
      this._articlesData = {};
      this._pagesData = {};
      this._tagsData = {};
      this.initialized = false;
    }

    Site.prototype.addArticleEntry = function(title, tags) {
      var articleData, articleFile, month, now, slug, year;
      slug = S(title).dasherize().toString();
      if (slug[0] === '-') {
        slug = slug.replace('-', '');
      }
      now = new Date();
      year = dt["eval"](now, 'date-')['date-year'];
      month = dt["eval"](now, 'date-')['date-month'];
      articleFile = path.join('articles', year, month, slug + '.md');
      articleData = {
        title: title,
        path: articleFile,
        createdAt: now.getTime(),
        tags: tags,
        published: false
      };
      this._articlesData.articles[slug + '-' + now.toISOString()] = articleData;
      return articleFile;
    };

    Site.prototype.generateSkeleton = function(callback) {
      return rock.create(this.sitePath, P('resources/rocks/default'), callback);
    };

    Site.prototype.initialize = function(callback) {
      var flow, self;
      self = this;
      return next(flow = {
        ERROR: function(err) {
          return callback(err);
        },
        loadPotterData: function() {
          return fs.readJSONFile(self._potterDataFile, this.next);
        },
        loadArticlesData: function(err, data) {
          self._potterData = data;
          return fs.readJSONFile(self._articlesDataFile, this.next);
        },
        loadTagsData: function(err, data) {
          self._articlesData = data;
          return fs.readJSONFile(self._tagsDataFile, this.next);
        },
        done: function(err, data) {
          self._tagsData = data;
          self.initialized = true;
          if (!(self._articlesData != null)) {
            self._articlesData = {};
          }
          if (!(self._articlesData.articles != null)) {
            self._articlesData.articles = {};
          }
          return callback(null);
        }
      });
    };

    Site.prototype.saveData = function(callback) {};

    Site.create = function(path) {
      return new Site(path);
    };

    return Site;

  })();

  module.exports.Site = Site;

}).call(this);
